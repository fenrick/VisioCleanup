name: SonarCloud
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
jobs:
  build:
    name: SonarCloud
    strategy:
      matrix:
        configuration: [Debug]
    runs-on: windows-2022
    env:
      Solution_Name: VisioCleanup.sln
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

    steps:
      - name: Set up Microsoft JDK
        uses: actions/setup-java@v3.4.1
        with:
          distribution: 'microsoft'
          java-version: '17'
          
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Install .NET 6.0.x
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'
        
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.1.3
        with:
          vs-prerelease: true
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Cache nuget
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install dependencies
        shell: powershell
        run: |
          dotnet restore $env:Solution_Name
          
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          Configuration: ${{ matrix.configuration }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"fenrick_VisioCleanup" /o:"fenrick" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          msbuild $env:Solution_Name /t:Clean,Restore,Build /p:Configuration=$env:Configuration
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
